
R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(pomp)

Welcome to pomp!

As of version 4.6, no user-visible pomp function has a name that
includes a dot ('.'). Function names have been changed to replace the
dot with an underscore ('_'). For more information, see the pomp blog:
https://kingaa.github.io/pomp/blog.html.

> library(ggplot2)
> 
> rproc <- Csnippet("
+     double rate[3], trans[7];
+     double alpha[4]={a_0,a_1,a_2,a_3};
+     
+     // should have q_t here not in rmeas and as state variable;?
+   
+     double xi = rgammawn(1,dt);
+     // True death is not by expon rate, but binomial probability.
+     rate[0] = -beeta*I/(S+E+I+R);    // stochastic force of infection
+     rate[1] = -rho;         // rho is our original sigma
+     rate[2] = -gamma;      // recovery
+     
+     // die first before transit
+     trans[1] = rbinom(S, delta);
+     trans[3] = rbinom(E, delta);
+     trans[5] = rbinom(I, delta);
+     trans[6] = rbinom(R, delta);
+     
+     trans[0] = rbinom(trans[1], 1-exp(rate[0]));
+     trans[2] = rbinom(trans[3], 1-exp(rate[1]));
+     trans[4] = rbinom(trans[5], 1-exp(rate[2]));
+     
+     // with birth case
+     S = trans[1] - trans[0] + rpois(a_0);
+     E = trans[3] + trans[0] - trans[2] + rpois(a_1);
+     I = trans[5] + trans[2] - trans[4] + rpois(a_2);
+     R = trans[6] + trans[4] + rpois(a_3); 
+     
+     //////////////////////////////////////////////////////////////////////////////////////
+     //////////////////////////////////////////////////////////////////////////////////////
+     // Try to incorporate lambda and mu in process model;
+     // Introducing lambda and mu
+     
+     double rate_l[3];
+     
+     rate_l[0] = -beeta*l_bar_I*delta/(delta*(l_bar_S+l_bar_E+l_bar_I+l_bar_R));  
+     rate_l[1] = -rho;         
+     rate_l[2] = -gamma; 
+     
+     l_S = l_bar_S*delta * exp(rate_l[0]) + a_0; // mean of poisson is the rate
+     l_E = l_bar_S*delta * (1-exp(rate_l[0])) + l_bar_E*delta * exp(rate_l[1]) + a_1;
+     l_I = l_bar_E*delta * (1-exp(rate_l[1])) + l_bar_I*delta * exp(rate_l[2]) + a_2;
+     l_R = l_bar_I*delta * (1-exp(rate_l[2])) + l_bar_R*delta * 1 + a_3;
+     
+     double ys_eys = Y_S/(q_S*l_S*g00+q_E*l_E*g10+q_I*l_I*g20+q_R*l_R*g30+k_0);
+     double ye_eye = Y_E/(q_S*l_S*g01+q_E*l_E*g11+q_I*l_I*g21+q_R*l_R*g31+k_1);
+     double yi_eyi = Y_I/(q_S*l_S*g02+q_E*l_E*g12+q_I*l_I*g22+q_R*l_R*g32+k_2);
+     double yr_eyr = Y_R/(q_S*l_S*g03+q_E*l_E*g13+q_I*l_I*g23+q_R*l_R*g33+k_3);
+     
+     l_bar_S = 1-q_S+(ys_eys*q_S*g00+ye_eye*q_E*g10+yi_eyi*q_I*g20+yr_eyr*q_R*g30)*l_S;
+     l_bar_E = 1-q_E+(ys_eys*q_S*g01+ye_eye*q_E*g11+yi_eyi*q_I*g21+yr_eyr*q_R*g31)*l_E;
+     l_bar_I = 1-q_I+(ys_eys*q_S*g02+ye_eye*q_E*g12+yi_eyi*q_I*g22+yr_eyr*q_R*g32)*l_I;
+     l_bar_R = 1-q_R+(ys_eys*q_S*g03+ye_eye*q_E*g13+yi_eyi*q_I*g23+yr_eyr*q_R*g33)*l_R;
+     
+     
+     mu_S = q_S*l_S*g00+q_E*l_E*g10+q_I*l_I*g20+q_R*l_R*g30 + k_0;
+     mu_E = q_S*l_S*g01+q_E*l_E*g11+q_I*l_I*g21+q_R*l_R*g31 + k_1;
+     mu_I = q_S*l_S*g02+q_E*l_E*g12+q_I*l_I*g22+q_R*l_R*g32 + k_2;
+     mu_R = q_S*l_S*g03+q_E*l_E*g13+q_I*l_I*g23+q_R*l_R*g33 + k_3;
+     
+ ")
> 
> ## ----rinit-------------------------------------------------
> rinit <- Csnippet("
+     double pi_0[4]={pi_0S,0,pi_0I,0}; // pi_0 should be specified
+     int trans_0[4];
+     double lambda_0[4] = {n*pi_0S,0,n*pi_0I,0};
+   
+     l_S=lambda_0[0];
+     l_E=lambda_0[1];
+     l_I=lambda_0[2];
+     l_R=lambda_0[3];
+   
+     l_bar_S=lambda_0[0];
+     l_bar_E=lambda_0[1];
+     l_bar_I=lambda_0[2];
+     l_bar_R=lambda_0[3];
+     
+     mu_S = 0;
+     mu_E = 0;
+     mu_I = 0;
+     mu_R = 0;
+ 
+     rmultinom(n, &pi_0, 4, &trans_0);
+     S = trans_0[0];
+     E = trans_0[1];
+     I = trans_0[2];
+     R = trans_0[3];
+ ")
> 
> 
> ## ----rmeasure-------------------------------------------------
> rmeas <- Csnippet("
+   int obs[4], arr_S[4], arr_E[4], arr_I[4], arr_R[4];
+   int Y[4];
+   double kappa[4]={k_0,k_1,k_2,k_3};
+   
+   
+   //Detect then misreport;
+   obs[0] = rbinom(S, q_S);
+   obs[1] = rbinom(E, q_E);
+   obs[2] = rbinom(I, q_I); // this is observed cases
+   obs[3] = rbinom(R, q_R);
+   
+   //misreporting matrix:
+   double prob_S[4] = {g00,g01,g02,g03};
+   double prob_E[4] = {g10,g11,g12,g13};
+   double prob_I[4] = {g20,g21,g22,g23};
+   double prob_R[4] = {g30,g31,g32,g33};
+   
+   //Observed Y:
+   rmultinom(obs[0], &prob_S, 4, &arr_S);
+   rmultinom(obs[1], &prob_E, 4, &arr_E);
+   rmultinom(obs[2], &prob_I, 4, &arr_I);
+   rmultinom(obs[3], &prob_R, 4, &arr_R);
+   
+   
+   for(int i=0; i<4; i++){
+     Y[i] = arr_S[i]+arr_E[i]+arr_I[i]+arr_R[i];
+   }
+   
+   Y_S = Y[0]+rpois(k_0);
+   Y_E = Y[1]+rpois(k_1);
+   Y_I = Y[2]+rpois(k_2);
+   Y_R = Y[3]+rpois(k_3);
+ ")
> 
> 
> ## ----dmeasure-------------------------------------------------
> dmeas <- Csnippet("
+   double ys_f,ye_f,yi_f,yr_f;
+   
+   for(int i = 1; i <= Y_S; ++i) {
+             ys_f *= i;
+   }
+   
+   for(int i = 1; i <= Y_E; ++i) {
+             ye_f *= i;
+   }
+         
+   for(int i = 1; i <= Y_I; ++i) {
+             yi_f *= i;
+   }
+         
+   for(int i = 1; i <= Y_R; ++i) {
+             yr_f *= i;
+   }
+         
+   lik = -(mu_S+mu_E+mu_I+mu_R) + (Y_S*log(mu_S)+Y_E*log(mu_E)+Y_I*log(mu_I)+Y_R*log(mu_R))- (log(ys_f)+log(ye_f)+log(yi_f)+log(yr_f));
+ ")
> 
> 
> sim1 <- simulate(t0=0, 
+                  times = 1:200, 
+                  paramnames = c("beeta", "rho", "gamma", "delta",
+                                 "pi_0S", "pi_0I", "n",
+                                 "a_0","a_1","a_2","a_3",
+                                 "k_0","k_1","k_2","k_3",
+                                 "g00","g01","g02","g03",
+                                 "g10","g11","g12","g13",
+                                 "g20","g21","g22","g23",
+                                 "g30","g31","g32","g33",
+                                 "q_S","q_E","q_I","q_R"),
+                  params = c(beeta=0.5, rho=0.05, gamma=0.1, delta=0.98, 
+                             pi_0S=0.99, pi_0I=0.01, 
+                             n=100000,
+                             a_0=4000,   a_1=0,    a_2=0,      a_3=0,
+                             k_0=1000,   k_1=1000, k_2=1000,   k_3=1000,
+                             g00=0.95,   g01=0.0,  g02=0.05,   g03=0.0,
+                             g10=0.3,    g11=0,    g12=0.7,    g13=0.0,
+                             g20=0.15,   g21=0.0,  g22=0.85,   g23=0.0,
+                             g30=0.0,    g31=0.0,  g32=0.0,    g33=1.0,
+                             q_S=0.1,    q_E=0.1,  q_I=0.3,    q_R=0.2),
+                  rinit = rinit,
+                  rprocess = discrete_time(rproc),
+                  rmeasure = rmeas,
+                  dmeasure = dmeas,
+                  statenames=c("S","E","I","R",
+                               "l_S","l_E","l_I","l_R",
+                               "l_bar_S","l_bar_E","l_bar_I","l_bar_R",
+                               "mu_S","mu_E","mu_I","mu_R"),
+                  obsnames=c("Y_S","Y_E","Y_I","Y_R"))
Error: in ‘simulate’: error in building shared-object library from C snippets: in ‘Cbuilder’: compilation error: cannot compile shared-object library ‘/var/folders/s3/1821f97s32d9qvg8jkprqcbm0000gn/T//Rtmpmg7DrU/44592/pomp_db88aa52357b4a140fdc2ad2a3e1f430.so’: status = 1
compiler messages:
clang -mmacosx-version-min=10.13 -I"/Library/Frameworks/R.framework/Resources/include" -DNDEBUG -I'/Library/Frameworks/R.framework/Versions/4.2/Resources/library/pomp/include' -I'/Users/yizehao/Study/STATS 489/PAL check'  -I/usr/local/include   -fPIC  -Wall -g -O2  -c /var/folders/s3/1821f97s32d9qvg8jkprqcbm0000gn/T//Rtmpmg7DrU/44592/pomp_db88aa52357b4a140fdc2ad2a3e1f430.c -o /var/folders/s3/1821f97s32d9qvg8jkprqcbm0000gn/T//Rtmpmg7DrU/44592/pomp_db88aa52357b4a140fdc2ad2a3e1f430.o
/var/folders/s3/1821f97s32d9qvg8jkprqcbm0000gn/T//Rtmpmg7DrU/44592/pomp_db88aa52357b4a140fdc2ad2a3e1f430.c:88:18: warning: incompatible pointer types passing 'double (*)[4]' to parameter of type 'double *' [-Win
In addition: Warning message:
In system2(command = R.home("bin/R"), args = c("CMD", "SHLIB", "-c",  :
  running command 'PKG_CPPFLAGS="-I'/Library/Frameworks/R.framework/Versions/4.2/Resources/library/pomp/include' -I'/Users/yizehao/Study/STATS 489/PAL check'" '/Library/Frameworks/R.framework/Resources/bin/R' CMD SHLIB -c -o /var/folders/s3/1821f97s32d9qvg8jkprqcbm0000gn/T//Rtmpmg7DrU/44592/pomp_db88aa52357b4a140fdc2ad2a3e1f430.so /var/folders/s3/1821f97s32d9qvg8jkprqcbm0000gn/T//Rtmpmg7DrU/44592/pomp_db88aa52357b4a140fdc2ad2a3e1f430.c 2>&1' had status 1
Execution halted
